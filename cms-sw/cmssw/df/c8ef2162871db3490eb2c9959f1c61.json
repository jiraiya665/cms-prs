{"additions": 112, "auther_ref": "reusableObjectHolderDeleter", "auther_sha": "d70d7a52c4c6eb3589014c9e3b86dcddc8fa34f6", "author": "makortel", "body": "#### PR description:\r\n\r\nThis PR adds support for custom deleter to the `edm::ReusableObjectHolder<T>`. The deleter type must be the same on all objects, and is a template parameter to the `ReusableObjectHolder<T, Deleter>`, defaulting to `std::default_delete<T>` (like in `std::unique_ptr`). For non-default deleters the object-making function must return `std::unique_ptr<T, Deleter>` (for default deleter a raw pointer `T*` is still allowed).\r\n\r\nThe deleter is allowed to have state, and the deleter object is passed around (between the returned `std::shared_ptr` and the internal `tbb::concurrent_queue`) along with the object `T`. The deleter object must be copyable.\r\n\r\n#### PR validation:\r\n\r\nUnit tests run, limited matrix runs.", "branch": "master", "changed_files": 2, "comments": 5, "commits": 1, "created_at": "1568640437", "deletions": 12, "labels": ["code-checks-approved", "comparison-pending", "core-pending", "orp-pending", "pending-signatures", "tests-started"], "milestone": "CMSSW_11_0_X", "number": 28004, "release-notes": [], "review_comments": 0, "state": "open", "title": "Add support for custom deleter to edm::ReusableObjectHolder", "updated_at": "1568641079", "user": "makortel"}