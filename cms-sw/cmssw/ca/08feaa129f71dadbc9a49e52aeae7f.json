{"additions": 431, "auther_ref": "HGCal_tiling_CLUE_10_6_0_pre4", "auther_sha": "b114c9c8c5bb12c4bceceff603c1df6687bd1ed3", "author": "felicepantaleo", "body": "#### PR description:\r\nHGCal Layer Clustering is the main offender in computing resources.\r\nThis is done using CLUE algorithm, which is using a KD-Tree for speeding up nearest neighbor search.\r\nHowever, the KD-Tree is \r\n\r\n- hard to build on a GPU\r\n- expensive if the search-box is small with respect to the point cloud volume\r\n- the number of dimensions is small\r\n\r\nThis PR replaces the KD-Tree with a Tiling data structure.\r\nThis allows to achieve a speed-up of **1 order of magnitude** in PU200 conditions, making the Layer Clustering negligible with respect to the rest of the Phase-2 reconstruction.\r\n\r\n#### PR validation:\r\nThis is the original timing of 10_6_0_pre4 on TTbar PU200:\r\nhttp://fpantale.web.cern.ch/fpantale/timing/html/original_10_6_0_pre4_PU200.html\r\n\r\nWith this PR:\r\nhttp://fpantale.web.cern.ch/fpantale/timing/html/tiling_10_6_0_pre4_PU200.html\r\n\r\nYou can see that timing for the hgcalLayerClusters module goes from _5.81s_ to _0.57s_\r\n\r\nPhysics validation was also carried out with negligible differences due to the change of logic in assignment of the cluster id:\r\n\r\nhttp://fpantale.web.cern.ch/fpantale/hgcal_validation_plots/histo_cpu_PU200/\r\n\r\n\r\n@rovere @ZihengChen @tonydp03 @malgeri @cseez ", "branch": "master", "changed_files": 4, "comments": 1, "commits": 3, "created_at": "1557830747", "deletions": 363, "labels": ["code-checks-pending", "comparison-pending", "orp-pending", "pending-signatures", "reconstruction-pending", "tests-pending", "upgrade-pending"], "milestone": "CMSSW_10_6_X", "number": 26777, "release-notes": [], "review_comments": 0, "state": "open", "title": "[HGCal] Use tiling for speeding up CLUE algo nearest neighbor search", "updated_at": "1557830778", "user": "felicepantaleo"}