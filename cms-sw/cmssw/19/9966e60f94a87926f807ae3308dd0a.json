{"additions": 1382, "auther_ref": "dqm-new-globaledanalyzer", "auther_sha": "7bf289c80289bf415a6f82375a3aeca17e6a7390", "author": "schneiml", "body": "#### PR description:\r\nThis PR imports more features from the \"new DQMStore\" project:\r\n\r\n- A new `DQMEDAnalyzer` base class, now based on `EDProducer`, like all the other DQM module base classes. This is to make sure that everything that _produces_ DQM histograms actually is known to the EDM framework as a _Producer_, even if the data still flows through the `DQMStore`; otherwise, we have no guarantees that modules will run in the correct order.\r\n\r\n- The `DQMServices/Demo` package, which contains some simple modules of each class and configuration to exercise the DQM framework, with no dependence on \"real\" CMSSW configurations. This replaces the old DQM examples code, which used to show types of interaction with DQM that are not supported any more (much of it was deleted in previous PRs). The demo code still relies on unusual features, since it was designed to test behaviors that need to be respected by a EDM Product driven DQM as prototyped in the \"new DQMStore\" branch; since the current DQM is not fully based on products, the behavior is not complete for now. \r\n\r\n- Some cleanup removing unused declarations in `DQMStore.h`, including `fastmatch`. The previous cleanup PRs left these unused.\r\n\r\n- Update: The old `runTheWhiteRabbit` tests are removed and replaced with completely new tests. The new tests don't cover much about the actual *correctness* of the DQM output (it turns out that in the details many things are arguably wrong in the current implementation), but it tests running the DQM framework code in many common and nonstandard situations, to see that at least nothing crashes and basic sanity checks are fulfilled. Highlights include things like ProtoBuf output (only running in HLT normally), concurrent Lumisections (well actually, they are blocked by the modules, but it will use them once possible), and a simple memory consumption check (hoping this does not blow up in IB testing...)\r\n\r\n(This PR includes  #28379, which in turn contains other PRs. It is not strictly required for this PR to work, but the new `DQMEDHarvester` introduced there is needed for the `Demo` package and some of the cleanup requires the other, not-yet-merged PRs. I will rebase this once enough of the other PRs are merged.) Edit: done.\r\n\r\nThis PR is not really polished yet, and more a base for discussion than something to merge. Update: That is still the case. Most likely I will merge this with a future PR, but it is useful to run tests now.\r\n\r\n#### PR validation:\r\n\r\nThe challenge with this PR is that `DQMGlobalEDAnalyzer`s are primarily used in HLT, and I am not sure how to test them there. For now, HLT configs should reliably crash due to the incorrect module type used in the auto-generated configs; I am not sure how to change this part of the code. Also `FastTimerService` and `ThroughputService` need to be checked. Let's see if any of that is picked up in the PR tests, else I'll have to defer that to the HLT experts.", "branch": "master", "changed_files": 300, "comments": 44, "commits": 24, "created_at": "1573830474", "deletions": 40241, "labels": ["alca-pending", "code-checks-approved", "comparison-pending", "dqm-pending", "hlt-pending", "new-package-pending", "orp-pending", "pending-signatures", "tests-started"], "milestone": "CMSSW_11_1_X", "number": 28407, "release-notes": [], "review_comments": 0, "state": "open", "title": "DQM: new DQMGlobalEDAnalyzer and Tests", "updated_at": "1576088543", "user": "schneiml"}