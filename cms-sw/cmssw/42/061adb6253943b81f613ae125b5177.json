{"additions": 1, "auther_ref": "byConstructionANodeCannotHaveJustOneSon", "auther_sha": "3ccddf348e4d3814b9a86d7c4e2921fe077db44a", "author": "perrotta", "body": "#### PR description:\r\n\r\nAs pointed out by the static analyzer, there was the possibility (which shouldn't never happen by construction but still possible in practice) that the code tries to access a null pointer.\r\nThis can be avoided by enforcing the check that both pointers that the code tries to access are non-null.\r\n\r\n#### PR validation:\r\n\r\nThe code compiles correctly\r\n\r\n@felicepantaleo @rovere ", "branch": "master", "changed_files": 1, "comments": 11, "commits": 1, "created_at": "1558591417", "deletions": 1, "labels": ["code-checks-approved", "comparison-available", "fully-signed", "orp-pending", "reconstruction-approved", "tests-approved", "upgrade-approved"], "milestone": "CMSSW_11_0_X", "number": 26896, "release-notes": [], "review_comments": 0, "state": "open", "title": "Fix HGCal KDTreeLinkerAlgoT.h: in the non-leaf case both left and right sons must exist", "updated_at": "1558617826", "user": "perrotta"}