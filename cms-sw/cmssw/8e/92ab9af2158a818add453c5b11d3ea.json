{"additions": 558, "auther_ref": "optionalPythonParameters", "auther_sha": "da05583031686efa88c3437ec8bece1473f08b66", "author": "Dr15Jones", "body": "#### PR description:\r\n\r\nAdded the ability to declare parameters in PSets, EDProducers, etc without giving actual values to those parameters. The three types are\r\n- `required`: if not set will throw a python exception during serialization to C++\r\n- `optional` : if not set the parameter will not be serialized to C++\r\n- `obsolete` : parameter is never serialzed to C++\r\n\r\nThis allows the following code\r\n```python\r\np = cms.PSet( foo = cms.required.int32, bar = cms.optional.untracked.string)\r\n\r\np.foo = 12\r\np.bar = \"stuff\"\r\n```\r\n\r\nThis facility is now used to define the standard top level PSets of `cms.Process` : options, maxEvents and maxLuminosityBlocks.\r\n\r\nIf more than one type is allowed for a given PSet label, one can use the `allowed` mechanism to specify the types:\r\n```python\r\n   p = cms.PSet( foo = cms.required.allowed(cms.int32, cms.string) )\r\n```\r\n\r\nTo make it easier to modify multiple parameters within a PSet, one can now use a `dict` to modify a given set of parameters within a PSet:\r\n\r\n```python\r\np.options = dict(numberOfThreads = 4, numberOfStreams = 2)\r\n```\r\n\r\nOn the C++ side, the `fillDescriptions` system was updated to generate `cms.required` and `cms.optional` entries in the `_cfi.py` files.\r\n#### PR validation:\r\n\r\nAll framework related tests pass.", "branch": "master", "changed_files": 28, "comments": 24, "commits": 9, "created_at": "1560349159", "deletions": 383, "labels": ["analysis-pending", "code-checks-pending", "comparison-pending", "core-pending", "operations-pending", "orp-pending", "pending-signatures", "reconstruction-pending", "tests-pending"], "milestone": "CMSSW_11_0_X", "number": 27191, "release-notes": [], "review_comments": 0, "state": "open", "title": "Optional python parameters", "updated_at": "1560383052", "user": "Dr15Jones"}