{"additions": 179, "auther_ref": "pfalgo-refactor-first", "auther_sha": "3b1ae0778119c710e7bd3428e68a33b8d1fce84b", "author": "jpata", "body": "#### PR description:\r\n\r\nProposal to start refactoring the PFAlgo::processBlock, which is a single function of several thousand lines, into smaller independent subfunctions based on physics functionality. As the original code is laid out quite clearly, simply in a long stream of consciousness, it is easy to factorize.\r\n\r\nAt this stage, we tackle a part of the `PFAlgo::processBlock`, introducing the following factorizations:\r\n\r\n-  `egammaFilters`: code in `PFAlgo::processblock { if(useEGammaFilters_) { ... } }`\r\n-  `conversionAlgo`: code in `PFAlgo::processblock { if(usePFConversions_) { ... } }`\r\n-  `elementLoop`: big loop in PF code ([line in code](https://github.com/cms-sw/cmssw/blob/master/RecoParticleFlow/PFProducer/src/PFAlgo.cc#L493)) that does multiple things:\r\n  o Deals with tracks that are not associated to electrons or HCAL\r\n  o Sorts the ECAL and HCAL elements in separate vectors\r\n  o For tracks which are connected to more than one HCAL cluster, cuts the links between the track and the cluster for all clusters but the closest one\r\n\r\nThis is meant as an inital PR to start clearing up the PFAlgo code, for which I imagine the path could be something like the following:\r\n\r\n- [x] Factorize `PFAlgo::processBlock` to smaller subfunctions (this PR, partly)\r\n- [ ] Sanitize the inputs and outputs of the functions and making sure they rely less on the PFAlgo state\r\n- [ ] Given the cleaned-up implementation form above, revisit the logic/physics of the algo to rewrite it from with Run3/HL-LHC in mind\r\n- [ ] Compare to an eventual ML PF algo that arrives in CMS\r\n\r\n#### PR validation:\r\n\r\nWe do not change the functionality of the PFAlgo, hence the output should not change at all and timing performance should change only in as much as the C++ compiler is able to optimize the code better. We have checked this in a previous version of this PR, see [here](https://github.com/jpata/cmssw/pull/44). Nevertheless, I'm running the following comparisons:\r\n- `runTheMatrix -l 38.0`\r\n\r\n#### if this PR is a backport please specify the original PR:\r\n\r\nComplete implementation in 10_5_X: https://github.com/jpata/cmssw/pull/44\r\nFirst cms-sw PR for obsolete `usePFPhotons_`: https://github.com/cms-sw/cmssw/pull/26825\r\n\r\ncc PF group: @hatakeyamak @bendavid ", "branch": "master", "changed_files": 2, "comments": 1, "commits": 1, "created_at": "1558553879", "deletions": 153, "labels": ["code-checks-pending", "comparison-pending", "orp-pending", "pending-signatures", "reconstruction-pending", "tests-pending"], "milestone": "CMSSW_11_0_X", "number": 26894, "release-notes": [], "review_comments": 0, "state": "open", "title": "refactored first part of PFAlgo::processBlock", "updated_at": "1558553936", "user": "jpata"}