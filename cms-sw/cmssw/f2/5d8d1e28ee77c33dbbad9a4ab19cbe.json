{"additions": 74, "auther_ref": "CMSSW_11_0_X_2019-07-12-1100/tauQCuts_trackNOconst", "auther_sha": "a901c48b3da75dcd55b9518ef9d6ed40abfaccf7", "author": "slava77", "body": "- the first and last commits are related to the static analyzer category of issues \"ConstThreadSafety | mutable member if accessed via const pointer\" for RecoTauQualityCuts:\r\n    - setXYZ methods are no longer declared const (and the corresponding members are no longer mutable)\r\n    - calls to RecoTauQualityCuts in the client methods qualified as const now go via pointers to the instances of RecoTauQualityCuts. Incidentally, this was already used this way in some RecoTau code\r\n\r\nThe migration from auto_ptr to unique_ptr is a somewhat aside cleanup of a deprecated C++ feature (removed in C++17).\r\n\r\nThis was tested in re-miniAOD workflows and showed no differences in tau reco outputs.", "branch": "master", "changed_files": 19, "comments": 1, "commits": 3, "created_at": "1563215179", "deletions": 74, "labels": ["code-checks-pending", "comparison-pending", "orp-pending", "pending-signatures", "reconstruction-pending", "tests-pending"], "milestone": "CMSSW_11_0_X", "number": 27526, "release-notes": [], "review_comments": 0, "state": "open", "title": "drop constness for modifiers in RecoTauQualityCuts; move auto_ptr to unique_ptr", "updated_at": "1563215239", "user": "slava77"}