{"additions": 464, "auther_ref": "uniquePtrDictionary", "auther_sha": "9d917d08ce88da7f8e82e89e234872be72f58669", "author": "makortel", "body": "#### PR description:\r\n\r\nFixes #27277. The complaint on missing dictionary for `std::unique_ptr<T>` came from the support code for `edm::View<T>`. The minimal fix was to specialize the `edm::detail::getMemberType` for `std::vector<std::unique_ptr<T>>`. That alone allows the `std::vector<std::unique_ptr<T>>` be produced by an EDProducer, and written to a file. Reading such a product from a file appears to currently work only if `T` has a dictionary, i.e. it does not work e.g. for fundamental types.\r\n\r\nAfter that it was natural to complete the support for `edm::View`, i.e. with this PR `edm::View<T>` can be used to read `std::vector<std::unique_ptr<T>>`.\r\n\r\nIn addition the \"friendly name\" transformation is improved to ignore the `std::default_delete<T>` from the full type name of `std::unique_ptr1` (among some other improvements in the parsing).\r\n\r\n#### PR validation:\r\n\r\nCode compiles, unit tests run.", "branch": "master", "changed_files": 18, "comments": 10, "commits": 5, "created_at": "1566586096", "deletions": 104, "labels": ["code-checks-approved", "comparison-notrun", "core-pending", "orp-pending", "pending-signatures", "tests-rejected"], "milestone": "CMSSW_11_0_X", "number": 27861, "release-notes": [], "review_comments": 2, "state": "open", "title": "Allow std::vector<std::unique_ptr<T>> be produced, and be read with edm::View<T>", "updated_at": "1566595305", "user": "makortel"}